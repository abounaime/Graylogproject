{"version":3,"sources":["webpack:///44.f4e666cd5ae6a3e3cac4.js","webpack:///./src/logic/files/FileSaver.js","webpack:///./src/pages/ExportContentPackPage.jsx"],"names":["webpackJsonp","1325","module","exports","__webpack_require__","Object","defineProperty","value","FileSaver","save","data","filename","mime","charset","link","document","createElement","effectiveCharset","contentType","undefined","download","href","encodeURIComponent","body","appendChild","click","removeChild","window","navigator","msSaveOrOpenBlob","blob","Blob","type","location","e","default","1346","_interopRequireDefault","obj","__esModule","_react","_react2","_reflux","_reflux2","_reactBootstrap","_FileSaver","_FileSaver2","_UserNotification","_UserNotification2","_StoreProvider","_StoreProvider2","_ActionsProvider","_ActionsProvider2","_common","DashboardsStore","getStore","GrokPatternsStore","InputsStore","OutputsStore","StreamsStore","InputsActions","getActions","ConfigurationBundlesActions","ExportContentPackPage","createClass","displayName","mixins","connect","getInitialState","componentDidMount","_this","this","listDashboards","then","dashboards","setState","loadPatterns","grokPatterns","grok_patterns","list","load","resp","outputs","listStreams","streams","onSubmit","evt","_this2","preventDefault","request","inputs","keys","refs","forEach","key","indexOf","checked","group","split","id","push","export","triggerPromise","response","success","isEmpty","count","length","inputDetails","input","details","name","attributes","bind_address","port","formatDashboard","dashboard","className","ref","title","formatGrokPattern","grokPattern","pattern","formatInput","formatOutput","output","formatStream","stream","selectAll","_this3","selectAllInputs","selectAllGrokPatterns","selectAllOutputs","selectAllStreams","selectAllDashboards","render","DocumentTitle","PageHeader","Row","Col","md","sm","htmlFor","required","rows","target","state","Button","onClick","sort","i1","i2","localeCompare","map","g1","g2","o1","o2","s1","s2","d1","d2","smOffset","bsStyle"],"mappings":"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","file":"44.f4e666cd5ae6a3e3cac4.js","sourcesContent":["webpackJsonp([44],{\n\n/***/ 1325:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar FileSaver = {\n  save: function save(data, filename, mime, charset) {\n    var link = document.createElement('a');\n\n    var effectiveCharset = charset ? ';charset=' + charset : '';\n    var contentType = charset ? '' + mime + effectiveCharset : mime;\n\n    // On modern browsers (Chrome and Firefox), use download property and a temporary link\n    if (link.download !== undefined) {\n      link.download = filename;\n      link.href = 'data:' + contentType + ',' + encodeURIComponent(data);\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n\n      return;\n    }\n\n    // On IE >= 10, use msSaveOrOpenBlob\n    if (window.navigator && typeof window.navigator.msSaveOrOpenBlob === 'function') {\n      var blob = new Blob([data], { type: contentType });\n      window.navigator.msSaveOrOpenBlob(blob, filename);\n\n      return;\n    }\n\n    try {\n      // On Safari and other browsers, try to open the JSON as attachment\n      location.href = 'data:application/attachment' + effectiveCharset + ',' + encodeURIComponent(data);\n    } catch (e) {\n      // If nothing else works, open the JSON as plain text in the browser\n      location.href = 'data:text/plain' + effectiveCharset + ',' + encodeURIComponent(data);\n    }\n  }\n};\n\nexports.default = FileSaver;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1346:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reflux = __webpack_require__(1);\n\nvar _reflux2 = _interopRequireDefault(_reflux);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _FileSaver = __webpack_require__(1325);\n\nvar _FileSaver2 = _interopRequireDefault(_FileSaver);\n\nvar _UserNotification = __webpack_require__(5);\n\nvar _UserNotification2 = _interopRequireDefault(_UserNotification);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nvar _ActionsProvider = __webpack_require__(7);\n\nvar _ActionsProvider2 = _interopRequireDefault(_ActionsProvider);\n\nvar _common = __webpack_require__(48);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DashboardsStore = _StoreProvider2.default.getStore('Dashboards');\nvar GrokPatternsStore = _StoreProvider2.default.getStore('GrokPatterns');\nvar InputsStore = _StoreProvider2.default.getStore('Inputs');\nvar OutputsStore = _StoreProvider2.default.getStore('Outputs');\nvar StreamsStore = _StoreProvider2.default.getStore('Streams');\n// eslint-disable-next-line no-unused-vars\nvar ConfigurationBundlesStore = _StoreProvider2.default.getStore('ConfigurationBundles');\n\nvar InputsActions = _ActionsProvider2.default.getActions('Inputs');\nvar ConfigurationBundlesActions = _ActionsProvider2.default.getActions('ConfigurationBundles');\n\nvar ExportContentPackPage = _react2.default.createClass({\n  displayName: 'ExportContentPackPage',\n\n  mixins: [_reflux2.default.connect(InputsStore)],\n  getInitialState: function getInitialState() {\n    return {};\n  },\n  componentDidMount: function componentDidMount() {\n    var _this = this;\n\n    DashboardsStore.listDashboards().then(function (dashboards) {\n      _this.setState({ dashboards: dashboards });\n    });\n    GrokPatternsStore.loadPatterns(function (grokPatterns) {\n      _this.setState({ grok_patterns: grokPatterns });\n    });\n    InputsActions.list();\n    OutputsStore.load(function (resp) {\n      _this.setState({ outputs: resp.outputs });\n    });\n    StreamsStore.listStreams().then(function (streams) {\n      _this.setState({ streams: streams });\n    });\n  },\n  onSubmit: function onSubmit(evt) {\n    var _this2 = this;\n\n    evt.preventDefault();\n    var request = {\n      streams: [],\n      inputs: [],\n      outputs: [],\n      dashboards: [],\n      grok_patterns: []\n    };\n    Object.keys(this.refs).forEach(function (key) {\n      if (key.indexOf('.') === -1) {\n        request[key] = _this2.refs[key].value;\n      } else if (_this2.refs[key].checked) {\n        var group = key.split('.')[0];\n        var id = key.split('.')[1];\n\n        request[group].push(id);\n      }\n    });\n    ConfigurationBundlesActions.export.triggerPromise(request).then(function (response) {\n      _UserNotification2.default.success('Successfully export content pack. Starting download...', 'Success!');\n      _FileSaver2.default.save(response, 'content_pack.json', 'application/json', 'utf-8');\n    });\n  },\n  isEmpty: function isEmpty(obj) {\n    return obj === undefined || (typeof obj.count === 'function' ? obj.count() === 0 : obj.length === 0);\n  },\n  inputDetails: function inputDetails(input) {\n    var details = input.name;\n    if (input.attributes.bind_address) {\n      details += ' on ' + input.attributes.bind_address;\n      if (input.attributes.port) {\n        details += ' port ' + input.attributes.port;\n      }\n    }\n\n    return details;\n  },\n  formatDashboard: function formatDashboard(dashboard) {\n    return _react2.default.createElement(\n      'div',\n      { className: 'checkbox', key: 'dashboard_checkbox-' + dashboard.id },\n      _react2.default.createElement(\n        'label',\n        { className: 'checkbox' },\n        _react2.default.createElement('input', { ref: 'dashboards.' + dashboard.id, type: 'checkbox', name: 'dashboards', id: 'dashboard_' + dashboard.id, value: dashboard.id }),\n        dashboard.title\n      )\n    );\n  },\n  formatGrokPattern: function formatGrokPattern(grokPattern) {\n    return _react2.default.createElement(\n      'div',\n      { className: 'checkbox', key: 'grok_pattern_checkbox-' + grokPattern.id },\n      _react2.default.createElement(\n        'label',\n        { className: 'checkbox' },\n        _react2.default.createElement('input', { ref: 'grok_patterns.' + grokPattern.id, type: 'checkbox', name: 'grokPatterns', id: 'grokPattern_' + grokPattern.id, value: grokPattern.id }),\n        grokPattern.name\n      ),\n      _react2.default.createElement(\n        'span',\n        { className: 'help-inline' },\n        'Pattern: ',\n        _react2.default.createElement(\n          'tt',\n          null,\n          grokPattern.pattern\n        )\n      )\n    );\n  },\n  formatInput: function formatInput(input) {\n    return _react2.default.createElement(\n      'div',\n      { className: 'checkbox', key: 'input_checkbox-' + input.id },\n      _react2.default.createElement(\n        'label',\n        { className: 'checkbox' },\n        _react2.default.createElement('input', { ref: 'inputs.' + input.id, type: 'checkbox', name: 'inputs', id: 'input_' + input.id, value: input.id }),\n        input.title\n      ),\n      _react2.default.createElement(\n        'span',\n        { className: 'help-inline' },\n        '(',\n        this.inputDetails(input),\n        ')'\n      )\n    );\n  },\n  formatOutput: function formatOutput(output) {\n    return _react2.default.createElement(\n      'div',\n      { className: 'checkbox', key: 'output_checkbox-' + output.id },\n      _react2.default.createElement(\n        'label',\n        { className: 'checkbox' },\n        _react2.default.createElement('input', { ref: 'outputs.' + output.id, type: 'checkbox', name: 'outputs', id: 'output_' + output.id, value: output.id }),\n        output.title\n      )\n    );\n  },\n  formatStream: function formatStream(stream) {\n    return _react2.default.createElement(\n      'div',\n      { className: 'checkbox', key: 'stream_checkbox-' + stream.id },\n      _react2.default.createElement(\n        'label',\n        { className: 'checkbox' },\n        _react2.default.createElement('input', { ref: 'streams.' + stream.id, type: 'checkbox', name: 'streams', id: 'stream_' + stream.id, value: stream.id }),\n        stream.title\n      )\n    );\n  },\n  selectAll: function selectAll(group) {\n    var _this3 = this;\n\n    Object.keys(this.refs).forEach(function (key) {\n      if (key.indexOf(group) === 0) {\n        _this3.refs[key].checked = true;\n      }\n    });\n  },\n  selectAllInputs: function selectAllInputs() {\n    this.selectAll('input');\n  },\n  selectAllGrokPatterns: function selectAllGrokPatterns() {\n    this.selectAll('grok_pattern');\n  },\n  selectAllOutputs: function selectAllOutputs() {\n    this.selectAll('output');\n  },\n  selectAllStreams: function selectAllStreams() {\n    this.selectAll('stream');\n  },\n  selectAllDashboards: function selectAllDashboards() {\n    this.selectAll('dashboard');\n  },\n  render: function render() {\n    return _react2.default.createElement(\n      _common.DocumentTitle,\n      { title: 'Create a content pack' },\n      _react2.default.createElement(\n        'span',\n        null,\n        _react2.default.createElement(\n          _common.PageHeader,\n          { title: 'Create a content pack' },\n          _react2.default.createElement(\n            'span',\n            null,\n            'Export your inputs, outputs, streams and dashboards as a content pack and share it with the community or other setups.'\n          )\n        ),\n        _react2.default.createElement(\n          _reactBootstrap.Row,\n          { className: 'content' },\n          _react2.default.createElement(\n            _reactBootstrap.Col,\n            { md: 6 },\n            _react2.default.createElement(\n              'form',\n              { className: 'form-horizontal build-content-pack', onSubmit: this.onSubmit },\n              _react2.default.createElement(\n                'div',\n                { className: 'form-group' },\n                _react2.default.createElement(\n                  _reactBootstrap.Col,\n                  { sm: 2 },\n                  _react2.default.createElement(\n                    'label',\n                    { className: 'control-label', htmlFor: 'name' },\n                    'Name'\n                  )\n                ),\n                _react2.default.createElement(\n                  _reactBootstrap.Col,\n                  { sm: 10 },\n                  _react2.default.createElement('input', { ref: 'name', type: 'text', id: 'name', className: 'input-xlarge form-control', name: 'name', required: true }),\n                  _react2.default.createElement(\n                    'span',\n                    { className: 'help-block' },\n                    'The name of your configuration bundle.'\n                  )\n                )\n              ),\n              _react2.default.createElement(\n                'div',\n                { className: 'form-group' },\n                _react2.default.createElement(\n                  _reactBootstrap.Col,\n                  { sm: 2 },\n                  _react2.default.createElement(\n                    'label',\n                    { className: 'control-label', htmlFor: 'description' },\n                    'Description'\n                  )\n                ),\n                _react2.default.createElement(\n                  _reactBootstrap.Col,\n                  { sm: 10 },\n                  _react2.default.createElement('textarea', { ref: 'description', rows: '6', id: 'description', name: 'description', className: 'input-xlarge form-control', required: true }),\n                  _react2.default.createElement(\n                    'span',\n                    { className: 'help-block' },\n                    'A description of what your bundle does and possible special instructions for the user. You can use ',\n                    _react2.default.createElement(\n                      'a',\n                      { href: 'http://daringfireball.net/projects/markdown/syntax', target: '_blank' },\n                      'Markdown'\n                    ),\n                    ' syntax.'\n                  )\n                )\n              ),\n              _react2.default.createElement(\n                'div',\n                { className: 'form-group' },\n                _react2.default.createElement(\n                  _reactBootstrap.Col,\n                  { sm: 2 },\n                  _react2.default.createElement(\n                    'label',\n                    { className: 'control-label', htmlFor: 'category' },\n                    'Category'\n                  )\n                ),\n                _react2.default.createElement(\n                  _reactBootstrap.Col,\n                  { sm: 10 },\n                  _react2.default.createElement('input', { ref: 'category', type: 'text', id: 'category', name: 'category', className: 'input-xlarge form-control', required: true }),\n                  _react2.default.createElement(\n                    'span',\n                    { className: 'help-block' },\n                    'A category for your bundle, e.g. Operating Systems, Firewalls or Switches.'\n                  )\n                )\n              ),\n              _react2.default.createElement(\n                'div',\n                { className: 'form-group' },\n                _react2.default.createElement(\n                  _reactBootstrap.Col,\n                  { sm: 2 },\n                  _react2.default.createElement(\n                    'label',\n                    { className: 'control-label', htmlFor: 'inputs' },\n                    'Inputs'\n                  )\n                ),\n                _react2.default.createElement(\n                  _reactBootstrap.Col,\n                  { sm: 10 },\n                  this.isEmpty(this.state.inputs) ? _react2.default.createElement(\n                    'span',\n                    { className: 'help-block help-standalone' },\n                    'There are no inputs to export.'\n                  ) : _react2.default.createElement(\n                    'span',\n                    null,\n                    _react2.default.createElement(\n                      _reactBootstrap.Button,\n                      { className: 'btn btn-sm btn-link select-all', onClick: this.selectAllInputs },\n                      'Select all'\n                    ),\n                    this.state.inputs.sort(function (i1, i2) {\n                      return i1.title.localeCompare(i2.title);\n                    }).map(this.formatInput)\n                  )\n                )\n              ),\n              _react2.default.createElement(\n                'div',\n                { className: 'form-group' },\n                _react2.default.createElement(\n                  _reactBootstrap.Col,\n                  { sm: 2 },\n                  _react2.default.createElement(\n                    'label',\n                    { className: 'control-label', htmlFor: 'grokPatterns' },\n                    'Grok Patterns'\n                  )\n                ),\n                _react2.default.createElement(\n                  _reactBootstrap.Col,\n                  { sm: 10 },\n                  this.isEmpty(this.state.grok_patterns) ? _react2.default.createElement(\n                    'span',\n                    { className: 'help-block help-standalone' },\n                    'There are no grok patterns to export.'\n                  ) : _react2.default.createElement(\n                    'span',\n                    null,\n                    _react2.default.createElement(\n                      _reactBootstrap.Button,\n                      { className: 'btn btn-sm btn-link select-all', onClick: this.selectAllGrokPatterns },\n                      'Select all'\n                    ),\n                    this.state.grok_patterns.sort(function (g1, g2) {\n                      return g1.name.localeCompare(g2.name);\n                    }).map(this.formatGrokPattern)\n                  )\n                )\n              ),\n              _react2.default.createElement(\n                'div',\n                { className: 'form-group' },\n                _react2.default.createElement(\n                  _reactBootstrap.Col,\n                  { sm: 2 },\n                  _react2.default.createElement(\n                    'label',\n                    { className: 'control-label', htmlFor: 'outputs' },\n                    'Outputs'\n                  )\n                ),\n                _react2.default.createElement(\n                  _reactBootstrap.Col,\n                  { sm: 10 },\n                  this.isEmpty(this.state.outputs) ? _react2.default.createElement(\n                    'span',\n                    { className: 'help-block help-standalone' },\n                    'There are no outputs to export.'\n                  ) : _react2.default.createElement(\n                    'span',\n                    null,\n                    _react2.default.createElement(\n                      _reactBootstrap.Button,\n                      { className: 'btn btn-sm btn-link select-all', onClick: this.selectAllOutputs },\n                      'Select all'\n                    ),\n                    this.state.outputs.sort(function (o1, o2) {\n                      return o1.title.localeCompare(o2.title);\n                    }).map(this.formatOutput)\n                  )\n                )\n              ),\n              _react2.default.createElement(\n                'div',\n                { className: 'form-group' },\n                _react2.default.createElement(\n                  _reactBootstrap.Col,\n                  { sm: 2 },\n                  _react2.default.createElement(\n                    'label',\n                    { className: 'control-label', htmlFor: 'streams' },\n                    'Streams'\n                  )\n                ),\n                _react2.default.createElement(\n                  _reactBootstrap.Col,\n                  { sm: 10 },\n                  this.isEmpty(this.state.streams) ? _react2.default.createElement(\n                    'span',\n                    { className: 'help-block help-standalone' },\n                    'There are no streams to export.'\n                  ) : _react2.default.createElement(\n                    'span',\n                    null,\n                    _react2.default.createElement(\n                      _reactBootstrap.Button,\n                      { className: 'btn btn-sm btn-link select-all', onClick: this.selectAllStreams },\n                      'Select all'\n                    ),\n                    this.state.streams.sort(function (s1, s2) {\n                      return s1.title.localeCompare(s2.title);\n                    }).map(this.formatStream)\n                  )\n                )\n              ),\n              _react2.default.createElement(\n                'div',\n                { className: 'form-group' },\n                _react2.default.createElement(\n                  _reactBootstrap.Col,\n                  { sm: 2 },\n                  _react2.default.createElement(\n                    'label',\n                    { className: 'control-label', htmlFor: 'dashboards' },\n                    'Dashboards'\n                  )\n                ),\n                _react2.default.createElement(\n                  _reactBootstrap.Col,\n                  { sm: 10 },\n                  this.isEmpty(this.state.dashboards) ? _react2.default.createElement(\n                    'span',\n                    { className: 'help-block help-standalone' },\n                    'There are no dashboards to export.'\n                  ) : _react2.default.createElement(\n                    'span',\n                    null,\n                    _react2.default.createElement(\n                      _reactBootstrap.Button,\n                      { className: 'btn btn-sm btn-link select-all', onClick: this.selectAllDashboards },\n                      'Select all'\n                    ),\n                    this.state.dashboards.sort(function (d1, d2) {\n                      return d1.title.localeCompare(d2.title);\n                    }).map(this.formatDashboard)\n                  )\n                )\n              ),\n              _react2.default.createElement(\n                'div',\n                { className: 'form-group' },\n                _react2.default.createElement(\n                  _reactBootstrap.Col,\n                  { smOffset: 2, sm: 10 },\n                  _react2.default.createElement(\n                    _reactBootstrap.Button,\n                    { bsStyle: 'success', type: 'submit' },\n                    _react2.default.createElement('i', { className: 'fa fa-cloud-download' }),\n                    ' Download my content pack'\n                  ),\n                  _react2.default.createElement('br', null),\n                  _react2.default.createElement('br', null),\n                  _react2.default.createElement(\n                    'p',\n                    null,\n                    _react2.default.createElement('i', { className: 'fa fa-lightbulb-o' }),\n                    '\\xA0 Share your content pack with the community on the ',\n                    _react2.default.createElement(\n                      'a',\n                      { href: 'https://marketplace.graylog.org/', target: '_blank' },\n                      'Graylog Marketplace'\n                    ),\n                    ' after you have downloaded it.'\n                  )\n                )\n              )\n            )\n          )\n        )\n      )\n    );\n  }\n});\n\nexports.default = ExportContentPackPage;\nmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 44.f4e666cd5ae6a3e3cac4.js","const FileSaver = {\n  save(data, filename, mime, charset) {\n    const link = document.createElement('a');\n\n    const effectiveCharset = charset ? `;charset=${charset}` : '';\n    const contentType = charset ? `${mime}${effectiveCharset}` : mime;\n\n    // On modern browsers (Chrome and Firefox), use download property and a temporary link\n    if (link.download !== undefined) {\n      link.download = filename;\n      link.href = `data:${contentType},${encodeURIComponent(data)}`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n\n      return;\n    }\n\n    // On IE >= 10, use msSaveOrOpenBlob\n    if (window.navigator && typeof window.navigator.msSaveOrOpenBlob === 'function') {\n      const blob = new Blob([data], { type: contentType });\n      window.navigator.msSaveOrOpenBlob(blob, filename);\n\n      return;\n    }\n\n    try {\n      // On Safari and other browsers, try to open the JSON as attachment\n      location.href = `data:application/attachment${effectiveCharset},${encodeURIComponent(data)}`;\n    } catch (e) {\n      // If nothing else works, open the JSON as plain text in the browser\n      location.href = `data:text/plain${effectiveCharset},${encodeURIComponent(data)}`;\n    }\n  },\n};\n\nexport default FileSaver;\n\n\n\n// WEBPACK FOOTER //\n// ./src/logic/files/FileSaver.js","import React from 'react';\nimport Reflux from 'reflux';\nimport { Row, Col, Button } from 'react-bootstrap';\n\nimport FileSaver from 'logic/files/FileSaver';\nimport UserNotification from 'util/UserNotification';\n\nimport StoreProvider from 'injection/StoreProvider';\nconst DashboardsStore = StoreProvider.getStore('Dashboards');\nconst GrokPatternsStore = StoreProvider.getStore('GrokPatterns');\nconst InputsStore = StoreProvider.getStore('Inputs');\nconst OutputsStore = StoreProvider.getStore('Outputs');\nconst StreamsStore = StoreProvider.getStore('Streams');\n// eslint-disable-next-line no-unused-vars\nconst ConfigurationBundlesStore = StoreProvider.getStore('ConfigurationBundles');\n\nimport ActionsProvider from 'injection/ActionsProvider';\nconst InputsActions = ActionsProvider.getActions('Inputs');\nconst ConfigurationBundlesActions = ActionsProvider.getActions('ConfigurationBundles');\n\nimport { DocumentTitle, PageHeader } from 'components/common';\n\nconst ExportContentPackPage = React.createClass({\n  mixins: [Reflux.connect(InputsStore)],\n  getInitialState() {\n    return {};\n  },\n  componentDidMount() {\n    DashboardsStore.listDashboards().then((dashboards) => {\n      this.setState({ dashboards });\n    });\n    GrokPatternsStore.loadPatterns((grokPatterns) => {\n      this.setState({ grok_patterns: grokPatterns });\n    });\n    InputsActions.list();\n    OutputsStore.load((resp) => {\n      this.setState({ outputs: resp.outputs });\n    });\n    StreamsStore.listStreams().then((streams) => {\n      this.setState({ streams });\n    });\n  },\n  onSubmit(evt) {\n    evt.preventDefault();\n    const request = {\n      streams: [],\n      inputs: [],\n      outputs: [],\n      dashboards: [],\n      grok_patterns: [],\n    };\n    Object.keys(this.refs).forEach((key) => {\n      if (key.indexOf('.') === -1) {\n        request[key] = this.refs[key].value;\n      } else if (this.refs[key].checked) {\n        const group = key.split('.')[0];\n        const id = key.split('.')[1];\n\n        request[group].push(id);\n      }\n    });\n    ConfigurationBundlesActions.export.triggerPromise(request)\n      .then((response) => {\n        UserNotification.success('Successfully export content pack. Starting download...', 'Success!');\n        FileSaver.save(response, 'content_pack.json', 'application/json', 'utf-8');\n      });\n  },\n  isEmpty(obj) {\n    return ((obj === undefined) || (typeof obj.count === 'function' ? obj.count() === 0 : obj.length === 0));\n  },\n  inputDetails(input) {\n    let details = input.name;\n    if (input.attributes.bind_address) {\n      details += ` on ${input.attributes.bind_address}`;\n      if (input.attributes.port) {\n        details += ` port ${input.attributes.port}`;\n      }\n    }\n\n    return details;\n  },\n  formatDashboard(dashboard) {\n    return (\n      <div className=\"checkbox\" key={`dashboard_checkbox-${dashboard.id}`}>\n        <label className=\"checkbox\"><input ref={`dashboards.${dashboard.id}`} type=\"checkbox\" name=\"dashboards\" id={`dashboard_${dashboard.id}`} value={dashboard.id} />{dashboard.title}</label>\n      </div>\n    );\n  },\n  formatGrokPattern(grokPattern) {\n    return (\n      <div className=\"checkbox\" key={`grok_pattern_checkbox-${grokPattern.id}`}>\n        <label className=\"checkbox\"><input ref={`grok_patterns.${grokPattern.id}`} type=\"checkbox\" name=\"grokPatterns\" id={`grokPattern_${grokPattern.id}`} value={grokPattern.id} />{grokPattern.name}</label>\n        <span className=\"help-inline\">Pattern: <tt>{grokPattern.pattern}</tt></span>\n      </div>\n    );\n  },\n  formatInput(input) {\n    return (\n      <div className=\"checkbox\" key={`input_checkbox-${input.id}`}>\n        <label className=\"checkbox\"><input ref={`inputs.${input.id}`} type=\"checkbox\" name=\"inputs\" id={`input_${input.id}`} value={input.id} />{input.title}</label>\n        <span className=\"help-inline\">({this.inputDetails(input)})</span>\n      </div>\n    );\n  },\n  formatOutput(output) {\n    return (\n      <div className=\"checkbox\" key={`output_checkbox-${output.id}`}>\n        <label className=\"checkbox\"><input ref={`outputs.${output.id}`} type=\"checkbox\" name=\"outputs\" id={`output_${output.id}`} value={output.id} />{output.title}</label>\n      </div>\n    );\n  },\n  formatStream(stream) {\n    return (\n      <div className=\"checkbox\" key={`stream_checkbox-${stream.id}`}>\n        <label className=\"checkbox\"><input ref={`streams.${stream.id}`} type=\"checkbox\" name=\"streams\" id={`stream_${stream.id}`} value={stream.id} />{stream.title}</label>\n      </div>\n    );\n  },\n  selectAll(group) {\n    Object.keys(this.refs).forEach((key) => {\n      if (key.indexOf(group) === 0) {\n        this.refs[key].checked = true;\n      }\n    });\n  },\n  selectAllInputs() {\n    this.selectAll('input');\n  },\n  selectAllGrokPatterns() {\n    this.selectAll('grok_pattern');\n  },\n  selectAllOutputs() {\n    this.selectAll('output');\n  },\n  selectAllStreams() {\n    this.selectAll('stream');\n  },\n  selectAllDashboards() {\n    this.selectAll('dashboard');\n  },\n  render() {\n    return (\n      <DocumentTitle title=\"Create a content pack\">\n        <span>\n          <PageHeader title=\"Create a content pack\">\n            <span>Export your inputs, outputs, streams and dashboards as a content pack and share it with the community or other setups.</span>\n          </PageHeader>\n\n          <Row className=\"content\">\n            <Col md={6}>\n              <form className=\"form-horizontal build-content-pack\" onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <Col sm={2}>\n                    <label className=\"control-label\" htmlFor=\"name\">Name</label>\n                  </Col>\n                  <Col sm={10}>\n                    <input ref=\"name\" type=\"text\" id=\"name\" className=\"input-xlarge form-control\" name=\"name\" required />\n                    <span className=\"help-block\">The name of your configuration bundle.</span>\n                  </Col>\n                </div>\n\n                <div className=\"form-group\">\n                  <Col sm={2}>\n                    <label className=\"control-label\" htmlFor=\"description\">Description</label>\n                  </Col>\n                  <Col sm={10}>\n                    <textarea ref=\"description\" rows=\"6\" id=\"description\" name=\"description\" className=\"input-xlarge form-control\" required />\n                    <span className=\"help-block\">\n                      A description of what your bundle does and possible special instructions for the user.\n                      You can use <a href=\"http://daringfireball.net/projects/markdown/syntax\" target=\"_blank\">Markdown</a> syntax.\n                    </span>\n                  </Col>\n                </div>\n\n                <div className=\"form-group\">\n                  <Col sm={2}>\n                    <label className=\"control-label\" htmlFor=\"category\">Category</label>\n                  </Col>\n                  <Col sm={10}>\n                    <input ref=\"category\" type=\"text\" id=\"category\" name=\"category\" className=\"input-xlarge form-control\" required />\n                    <span className=\"help-block\">A category for your bundle, e.g. Operating Systems, Firewalls or Switches.</span>\n                  </Col>\n                </div>\n\n                <div className=\"form-group\">\n                  <Col sm={2}>\n                    <label className=\"control-label\" htmlFor=\"inputs\">Inputs</label>\n                  </Col>\n                  <Col sm={10}>\n                    {this.isEmpty(this.state.inputs) ?\n                      <span className=\"help-block help-standalone\">There are no inputs to export.</span>\n                      :\n                      <span>\n                        <Button className=\"btn btn-sm btn-link select-all\" onClick={this.selectAllInputs}>Select all</Button>\n                        {this.state.inputs.sort((i1, i2) => { return i1.title.localeCompare(i2.title); }).map(this.formatInput)}\n                      </span>\n                    }\n                  </Col>\n                </div>\n\n                <div className=\"form-group\">\n                  <Col sm={2}>\n                    <label className=\"control-label\" htmlFor=\"grokPatterns\">Grok Patterns</label>\n                  </Col>\n                  <Col sm={10}>\n                    {this.isEmpty(this.state.grok_patterns) ?\n                      <span className=\"help-block help-standalone\">There are no grok patterns to export.</span>\n                      :\n                      <span>\n                        <Button className=\"btn btn-sm btn-link select-all\" onClick={this.selectAllGrokPatterns}>Select all</Button>\n                        {this.state.grok_patterns.sort((g1, g2) => { return g1.name.localeCompare(g2.name); }).map(this.formatGrokPattern)}\n                      </span>\n                      }\n                  </Col>\n                </div>\n\n                <div className=\"form-group\">\n                  <Col sm={2}>\n                    <label className=\"control-label\" htmlFor=\"outputs\">Outputs</label>\n                  </Col>\n                  <Col sm={10}>\n                    {this.isEmpty(this.state.outputs) ?\n                      <span className=\"help-block help-standalone\">There are no outputs to export.</span>\n                      :\n                      <span>\n                        <Button className=\"btn btn-sm btn-link select-all\" onClick={this.selectAllOutputs}>Select all</Button>\n                        {this.state.outputs.sort((o1, o2) => { return o1.title.localeCompare(o2.title); }).map(this.formatOutput)}\n                      </span>\n                    }\n                  </Col>\n                </div>\n\n                <div className=\"form-group\">\n                  <Col sm={2}>\n                    <label className=\"control-label\" htmlFor=\"streams\">Streams</label>\n                  </Col>\n                  <Col sm={10}>\n                    {this.isEmpty(this.state.streams) ?\n                      <span className=\"help-block help-standalone\">There are no streams to export.</span>\n                      :\n                      <span>\n                        <Button className=\"btn btn-sm btn-link select-all\" onClick={this.selectAllStreams}>Select all</Button>\n                        {this.state.streams.sort((s1, s2) => { return s1.title.localeCompare(s2.title); }).map(this.formatStream)}\n                      </span>\n                      }\n                  </Col>\n                </div>\n\n                <div className=\"form-group\">\n                  <Col sm={2}>\n                    <label className=\"control-label\" htmlFor=\"dashboards\">Dashboards</label>\n                  </Col>\n                  <Col sm={10}>\n                    {this.isEmpty(this.state.dashboards) ?\n                      <span className=\"help-block help-standalone\">There are no dashboards to export.</span>\n                      :\n                      <span>\n                        <Button className=\"btn btn-sm btn-link select-all\" onClick={this.selectAllDashboards}>Select all</Button>\n                        {this.state.dashboards.sort((d1, d2) => { return d1.title.localeCompare(d2.title); }).map(this.formatDashboard)}\n                      </span>\n                      }\n                  </Col>\n                </div>\n\n                <div className=\"form-group\">\n                  <Col smOffset={2} sm={10}>\n                    <Button bsStyle=\"success\" type=\"submit\">\n                      <i className=\"fa fa-cloud-download\" /> Download my content pack\n                    </Button>\n\n                    <br /><br />\n                    <p>\n                      <i className=\"fa fa-lightbulb-o\" />&nbsp;\n                      Share your content pack with the community on the <a href=\"https://marketplace.graylog.org/\" target=\"_blank\">Graylog Marketplace</a> after you have downloaded it.\n                    </p>\n                  </Col>\n                </div>\n              </form>\n            </Col>\n          </Row>\n        </span>\n      </DocumentTitle>\n    );\n  },\n});\n\nexport default ExportContentPackPage;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/ExportContentPackPage.jsx"],"sourceRoot":""}